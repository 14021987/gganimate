% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/view-step.R
\name{view_step}
\alias{view_step}
\title{Follow the data in steps}
\usage{
view_step(pause_length, step_length, nsteps = NULL, look_ahead = 0,
  delay = 0, ease = "cubic-in-out", wrap = TRUE, pause_first = FALSE)
}
\arguments{
\item{pause_length}{The relative length the view will be kept static. Will
be recycled to match the number of steps}

\item{step_length}{The relative length the view will use to transtion to the
new position. Will be recycled to match the number of steps}

\item{nsteps}{The number of steps. If \code{NULL} it will be set to the max length
of \code{pause_length} or \code{step_length}}

\item{look_ahead}{A relative length to look ahead in the animation to get the
new zoom area. Allow the view to zoom to where the data will be}

\item{delay}{A relative length to switch the view back and forth relative to
the actual frames. E.g. if delay is calculated to 5 frames, frame 6 will get
the view intended for frame 1.}

\item{ease}{The easing function used for the step}

\item{wrap}{As in \code{\link[=transition_states]{transition_states()}}. Should the view wrap around and zoom
back to the first state.}

\item{pause_first}{Should the view start with a pause. The default is to
start with a step so that it is aligned to the static period in
\code{\link[=transition_states]{transition_states()}}}
}
\description{
This view is a bit like \code{\link[=view_follow]{view_follow()}} but will not match the data in each
frame. Instead it will switch between being static and zoom to the range of
the data. It is a great pairing with \code{\link[=transition_states]{transition_states()}} as it can move the
view while the data is static and then be static while the data moves.
}
\seealso{
Other views: \code{\link{view_follow}},
  \code{\link{view_static}}
}
\concept{views}
